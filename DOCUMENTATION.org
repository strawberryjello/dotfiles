* TOC
- [[#zshrc][.zshrc]]
- [[#vimrc][.vimrc]]
- [[#tmux][tmux]]
- [[#tmuxinator][tmuxinator]]
- [[#bashrc-aliases][.bashrc-aliases]]
- [[#xmodmap][.Xmodmap]]
- [[#spacemacs-setup][Spacemacs setup]]

* .zshrc

Currently trying out
[[https://github.com/robbyrussell/oh-my-zsh][oh-my-zsh]] on a Mac. See
the
[[https://github.com/robbyrussell/oh-my-zsh/wiki/Cheatsheet][oh-my-zsh
cheatsheet]] for the list of aliases provided.

** Setup

Create a symlink for =.zshrc= in =/home/<user>=.

Note: The =.zshrc= file in this repo has only a few modifications from
the one generated by oh-my-zsh.

** Plugins

I stopped using the =tmux= plugin since I no longer need it. However, I
left the (commented out) variables with notes in =.zshrc= for reference.

Note: I noticed that the variables for the =tmux= plugin must be
specified before the line =source $ZSH/oh-my-zsh.sh= in order for them
to be applied. This may be the same for other plugins.

* .vimrc

Trying out a Rails setup for Vim. Work in progress.

** Setup

Create a symlink for =.vimrc= in =/home/<user>=.

For the plugins:

1. Install [[https://github.com/gmarik/Vundle.vim][Vundle]] by cloning
   it into =~/.vim/bundle/Vundle.vim= (see the Vundle readme for more
   details).

2. Install the plugins by running:

-  within Vim: =:PluginInstall= (run =:source %= first if editing
   =.vimrc= in =vim=)
-  on the command line: =vim +PluginInstall +qall=

** vim-airline

See the [[https://github.com/bling/vim-airline][GitHub repo readme]] and
[[https://github.com/bling/vim-airline/wiki/FAQ][FAQ]] for installation
and configuration instructions.

For the Powerline fonts, clone [[https://github.com/powerline/fonts][the
GitHub repo]] and install by running =./install.sh=. Afterwards set your
terminal's font to one of the patched fonts: - On OS X iTerm2: set the
Regular and Non-ASCII fonts in
=iTerm > Preferences > <choose your profile> > Text tab= - On Ubuntu
(Trusty) terminal: set the Font in
=Edit > Profile Preferences > General tab=

** unite.vim and related plugins

See the [[https://github.com/rstacruz/vim-fastunite][vim-fastunite
installation instructions]] for the list of plugin dependencies.

On OS X, I also installed
[[https://github.com/ggreer/the_silver_searcher][the\_silver\_searcher]]
via Homebrew to speed up grep.

Note: Leader key is currently set to =,=.

*** To do

-  Set up [[http://ctags.sourceforge.net/][exuberant ctags]]
-  OS X: =brew install ctags=
-  Install the [[https://github.com/tsukkee/unite-tag][unite-tag]]
   plugin

Tutorials:

-  [[http://blog.sensible.io/2014/05/09/supercharge-your-vim-into-ide-with-ctags.html][Supercharge
   your Vim into an IDE with ctags]]
-  [[http://andrew.stwrt.ca/posts/vim-ctags/][Vim and ctags]]
-  [[http://ricostacruz.com/til/navigate-code-with-ctags.html][Navigate
   code like a pro with ctags]]

** Color schemes

Preinstalled color schemes are located in =/usr/share/vim/vimXX/colors=.
Available color schemes can be cycled through by running
=:colorscheme<space><Tab>= then hitting =<Tab>= repeatedly.

To install a new color scheme:

1. Create a =colors= directory in =~/.vim=

2. Download a color scheme from [[http://vimcolors.com/][vimcolors.com]]
   or similar and save the =.vim= file in =~/.vim/colors=

3. Include the line =colorscheme <scheme_name>= in =.vimrc= (or
   temporarily try a color scheme by running
   =:colorscheme <scheme_name>=)

** References

-  http://vim.wikia.com/wiki/Indenting\_source\_code
-  http://vim.wikia.com/wiki/Converting\_tabs\_to\_spaces
-  http://vim.wikia.com/wiki/Change\_the\_color\_scheme
-  http://vim.wikia.com/wiki/Switch\_color\_schemes
-  http://vim.wikia.com/wiki/Find\_in\_files\_within\_Vim (=:grep= et
   al)
-  Mapping keys in Vim:
   [[http://vim.wikia.com/wiki/Mapping_keys_in_Vim_-_Tutorial_%28Part_1%29][part
   1]],
   [[http://vim.wikia.com/wiki/Mapping_keys_in_Vim_-_Tutorial_%28Part_2%29][part
   2]],
   [[http://vim.wikia.com/wiki/Mapping_keys_in_Vim_-_Tutorial_%28Part_3%29][part
   3]]
-  [[http://learnvimscriptthehardway.stevelosh.com/][Learn Vimscript the
   Hard Way]]

* tmux

Configuration for tmux. Work in progress.

** Setup

Create a symlink for =.tmux.conf= in =/home/<user>=.

** References

-  [[https://wiki.archlinux.org/index.php/Tmux][Arch Linux wiki page for
   tmux]]
-  [[http://learnxinyminutes.com/docs/tmux/][Learn X in Y minutes:
   tmux]]
-  [[https://gist.github.com/MohamedAlaa/2961058][tmux cheatsheet gist]]

* tmuxinator

tmux session layouts that I use at work.

** Setup

Create a symlink for each project file in the =tmuxinator= directory in
=/home/<user>/.tmuxinator=.

Note: Project files generated using =tmuxinator open <filename>= will be
saved in =/home/<user>/.tmuxinator= by default.

** References

-  [[https://github.com/tmuxinator/tmuxinator][tmuxinator readme]]

* .bashrc-aliases

This file contains the shortcuts I used in day-to-day development. No
longer in use because I'm trying out oh-my-zsh.

* .Xmodmap

This contains some modifier key mappings I made for Emacs 23 that map
several keys, such as Alt and Caps Lock, as Ctrl keys. Currently I no
longer use them since Spacemacs has reduced the number of times I need
to use the Ctrl key.

** Usage

Make sure you have =xmodmap= installed.

Put =.Xmodmap= in your home directory so that the mappings will be
applied when you log in (this works for Ubuntu 12.04 and 14.04). To
manually apply the mappings, run =xmodmap ~/.Xmodmap=.

To view your current mappings, run =xmodmap=.

** References

-  [[https://wiki.archlinux.org/index.php/Xmodmap][Arch Linux wiki page
   for Xmodmap]]
-  [[http://linux.die.net/man/1/xmodmap][xmodmap(1) man page at
   linux.die.net]]

* Spacemacs setup
See [[https://github.com/syl20bnr/spacemacs/blob/master/doc/DOCUMENTATION.org][the Spacemacs documentation]] for installation instructions. Make sure to back up your =.emacs= or =.emacs.d= first. (The file =.spacemacs.bak= is a backup of my old =.spacemacs= prior to Spacemacs v0.104.4.)

Create a symlink for =.spacemacs= in =/home/<user>=.

Note: For OS X, symlink =spacemacs-mac/.spacemacs=.

Example: =ln -sv dotfiles/.spacemacs=

** Private config layer: Work

The =work= directory contains a config layer with its own =packages.el= and =extensions.el=. It's currently configured for Rails development.

*** Setup

1. Create a symlink for =work= in =.emacs.d/private=.

  Example: =ln -sv dotfiles/work=

2. Add =work= to the list of config layers in =.spacemacs=.

  Example: =(setq-default dotspacemacs-configuration-layers '(work))=

3. Spacemacs will automatically download and install any new packages after startup. Make sure to define a =work/init-<package>= function for each package in =packages.el=. If there are no customizations to be made, simply calling =(use-package <package>)= within the function is enough. (See [[https://github.com/jwiegley/use-package][use-package]] for more details on usage.)

  Example:

  =(defun work/init-haml-mode ()      (use-package haml-mode))=
